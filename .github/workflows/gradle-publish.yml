name: Release Jar

permissions:
  contents: write

on:
  push:
    branches:
      - 'main' # Trigger on the 'main' branch
      - 'pre'  # Trigger on the 'pre' branch
  pull_request:
    branches:
      - 'main' # Trigger on the 'main' branch
      - 'pre'  # Trigger on the 'pre' branch

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.0.0

      # Build the project
      - name: Build with Gradle
        run: ./gradlew build

      # Extract the project version from gradle.properties
      - name: Get Project Version
        id: get_version
        run: |
          VERSION=$(grep "^projectVersion=" gradle.properties | cut -d'=' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Set PRERELEASE and adjust version for pre-release
      - name: Determine Pre-release Status
        id: determine_prerelease
        run: |
          if [[ "${GITHUB_REF##*/}" == "pre" ]]; then
            echo "PRERELEASE=true" >> $GITHUB_ENV
            echo "RELEASE_NAME=${{ env.VERSION }}-pre" >> $GITHUB_ENV
            echo "TAG_NAME=${{ env.VERSION }}-pre" >> $GITHUB_ENV
          else
            echo "PRERELEASE=false" >> $GITHUB_ENV
            echo "RELEASE_NAME=${{ env.VERSION }}" >> $GITHUB_ENV
            echo "TAG_NAME=${{ env.VERSION }}" >> $GITHUB_ENV
          fi

      # Define the JAR file path based on the version
      - name: Set JAR Path
        id: set_jar_path
        run: |
          JAR_PATH="./lwjgl3/build/libs/Jumping Runner-${{ env.VERSION }}.jar"
          if [[ -f "$JAR_PATH" ]]; then
            echo "JAR_PATH=$JAR_PATH" >> $GITHUB_ENV
          else
            echo "Error: $JAR_PATH does not exist." >&2
            exit 1
          fi

      # Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}       # Use the modified tag name
          release_name: ${{ env.RELEASE_NAME }}  # Use the modified release name
          prerelease: ${{ env.PRERELEASE }}

      # Upload Release Asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.JAR_PATH }}
          asset_name: "Jumping-Runner.jar"
          asset_content_type: application/java-archive
